'use client';import {useEffect,useMemo,useState,useCallback} from 'react';import InlineSVG from '../components/InlineSVG';import {CLOSE_TOKENS} from '../lib/routeMap';import {FORCED_ROUTES} from '../lib/forcedRoutes';function idOf(node){while(node&&node!==document){if(node.getAttribute){const id=node.getAttribute('id');if(id)return id;}node=node.parentNode;}return null;}async function fetchJSON(p){const r=await fetch(p);if(!r.ok)return null;try{return await r.json();}catch{return null;}}export default function Page(){const[files,setFiles]=useState([]);const[stack,setStack]=useState([]);const[toast,setToast]=useState('');useEffect(()=>{fetchJSON('/api/manifest').then(m=>setFiles((m?.svgs||[]).map(f=>f.replace(/\.svg$/,'')).sort()));},[]);const mainCandidate=useMemo(()=>{const lowers=files.map(f=>f.toLowerCase());const pref=['0-main','00-main','000-main','main-scrern','main-screen','main scrern','main','home','start'];for(const p of pref){const i=lowers.indexOf(p);if(i>=0)return files[i];}return files[0]||'main';},[files]);const showToast=useCallback((t)=>{setToast(t);setTimeout(()=>setToast(''),1600);},[]);const ensureExists=useCallback((name)=>files.includes(name),[files]);const openModal=useCallback((basename)=>{if(!basename)return;let target=basename;const forced=FORCED_ROUTES[`btn-${basename}`];if(forced)target=forced;if(!ensureExists(target)){showToast(`Файл не найден: ${target}.svg`);const stub=files.find(f=>f===`stub-${basename}`);if(stub){setStack(prev=>[...prev,stub]);return;}return;}setStack(prev=>[...prev,target]);},[ensureExists,files,showToast]);const closeTop=useCallback(()=>setStack(prev=>prev.slice(0,-1)),[]);const handleClick=useCallback((context)=>(e)=>{const raw=idOf(e.target)||'';const id=raw.trim().toLowerCase();if(!id)return;if(CLOSE_TOKENS.some(t=>id.includes(t))){closeTop();return;}const m=id.match(/^btn-(.+)$/i);if(m){let name=m[1];const forced=FORCED_ROUTES[id];if(forced)name=forced;openModal(name);return;}if(id.startsWith('row-')||id.includes('table-row')||id.includes('crm-row')){const rowTarget=files.find(f=>['crm-card-modal','crm-user-card','crm-card','card-modal'].includes(f))||files.find(f=>f.startsWith('stub-crm-card-modal'));if(rowTarget)setStack(prev=>[...prev,rowTarget]);else showToast('Карточка не найдена');}},[openModal,closeTop,files,showToast]);const onOverlayClick=useCallback((e)=>{if(e.target.classList.contains('overlay'))closeTop();},[closeTop]);return(<div className='container'><div className='phone-frame'><InlineSVG name={mainCandidate} className='main-canvas' onClick={handleClick('main')}/>{stack.map((modal,idx)=>(<div key={idx} className='overlay' onClick={onOverlayClick}><div className='modal-wrap'><InlineSVG name={modal} className='modal-canvas' onClick={handleClick(modal)}/></div></div>))}{toast?<div className='toast'>{toast}</div>:null}<div className='click-hint'>tap elements by id</div></div></div>);}